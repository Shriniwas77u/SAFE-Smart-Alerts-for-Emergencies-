import { useState, useEffect } from 'react';
import { Container, Row, Col, Card, Button, Alert, Badge, Form, Modal, Spinner } from 'react-bootstrap';
import { alertsAPI } from '../services/api';

function Alerts() {
    const [showCreateModal, setShowCreateModal] = useState(false);
    const [newAlert, setNewAlert] = useState({
        title: '',
        description: '',
        alertType: 'General',
        priority: 'Medium',
        status: 'Active',
        geoTargeting: '',
        affectedPopulation: 0
    });
    const [alerts, setAlerts] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');
    
    useEffect(() => {
        fetchAlerts();
    }, []);

    const fetchAlerts = async () => {
        setLoading(true);
        setError('');
        try {
            const data = await alertsAPI.getAll();
            setAlerts(data);
        } catch (err) {
            setError('Failed to fetch alerts.');
        } finally {
            setLoading(false);
        }
    };

    const handleCreateAlert = async () => {
        try {
            await alertsAPI.create(newAlert);
            setShowCreateModal(false);
            setNewAlert({
                title: '',
                description: '',
                alertType: 'General',
                priority: 'Medium',
                status: 'Active',
                geoTargeting: '',
                affectedPopulation: 0
            });
            fetchAlerts();
        } catch (err) {
            setError('Failed to create alert.');
        }
    };

    const getSeverityVariant = (priority) => {
        switch (priority) {
            case 'High': return 'danger';
            case 'Medium': return 'warning';
            case 'Low': return 'info';
            default: return 'secondary';
        }
    };

    const getStatusVariant = (status) => {
        return status === 'Active' ? 'success' : 'secondary';
    };

    return (
        <Container>
            <Row className="mb-4">
                <Col>
                    <div className="d-flex justify-content-between align-items-center">
                        <div>
                            <h1 className="text-danger">Emergency Alerts</h1>
                            <p className="text-muted">Monitor and manage emergency alerts</p>
                        </div>
                        <Button variant="danger" onClick={() => setShowCreateModal(true)}>
                            <i className="bi bi-plus-circle me-2"></i>
                            Create Alert
                        </Button>
                    </div>
                </Col>
            </Row>
            {error && <Alert variant="danger">{error}</Alert>}
            {loading ? (
                <div className="text-center my-5"><Spinner animation="border" /></div>
            ) : (
                <>
                    <Row className="mb-4">
                        <Col>
                            <Alert variant="info">
                                <strong>System Status:</strong> {alerts.filter(a => a.status === 'Active').length} active alerts currently affecting {alerts.filter(a => a.status === 'Active').reduce((sum, a) => sum + (a.affectedPopulation || 0), 0).toLocaleString()} people.
                            </Alert>
                        </Col>
                    </Row>
                    <Row>
                        {alerts.map(alert => (
                            <Col lg={6} key={alert.alertId} className="mb-4">
                                <Card className="shadow-sm h-100">
                                    <Card.Header className="d-flex justify-content-between align-items-start">
                                        <div>
                                            <Badge bg={getSeverityVariant(alert.priority)} className="me-2">
                                                {alert.priority}
                                            </Badge>
                                            <Badge bg={getStatusVariant(alert.status)}>
                                                {alert.status}
                                            </Badge>
                                        </div>
                                        <small className="text-muted">{alert.alertType}</small>
                                    </Card.Header>
                                    <Card.Body>
                                        <Card.Title className="h5">{alert.title}</Card.Title>
                                        <Card.Text>{alert.description}</Card.Text>
                                        <div className="mb-3">
                                            <small className="text-muted">
                                                <i className="bi bi-geo-alt me-1"></i>
                                                Area: {alert.geoTargeting}
                                            </small>
                                            <br />
                                            <small className="text-muted">
                                                <i className="bi bi-clock me-1"></i>
                                                Created: {new Date(alert.createdDate).toLocaleString()}
                                            </small>
                                            <br />
                                            <small className="text-muted">
                                                <i className="bi bi-people me-1"></i>
                                                Affected: {(alert.affectedPopulation || 0).toLocaleString()} people
                                            </small>
                                        </div>
                                    </Card.Body>
                                    <Card.Footer className="bg-transparent">
                                        <div className="d-flex gap-2">
                                            <Button variant="outline-primary" size="sm">
                                                <i className="bi bi-eye me-1"></i>
                                                View Details
                                            </Button>
                                            <Button variant="outline-secondary" size="sm">
                                                <i className="bi bi-pencil me-1"></i>
                                                Edit
                                            </Button>
                                            {alert.status === 'Active' && (
                                                <Button variant="outline-danger" size="sm">
                                                    <i className="bi bi-x-circle me-1"></i>
                                                    Resolve
                                                </Button>
                                            )}
                                        </div>
                                    </Card.Footer>
                                </Card>
                            </Col>
                        ))}
                    </Row>
                </>
            )}
            <Modal show={showCreateModal} onHide={() => setShowCreateModal(false)} size="lg">
                <Modal.Header closeButton>
                    <Modal.Title>Create New Emergency Alert</Modal.Title>
                </Modal.Header>
                <Modal.Body>
                    <Form>
                        <Form.Group className="mb-3">
                            <Form.Label>Alert Title</Form.Label>
                            <Form.Control
                                type="text"
                                value={newAlert.title}
                                onChange={(e) => setNewAlert({...newAlert, title: e.target.value})}
                                placeholder="Enter alert title"
                            />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>Description</Form.Label>
                            <Form.Control
                                as="textarea"
                                rows={3}
                                value={newAlert.description}
                                onChange={(e) => setNewAlert({...newAlert, description: e.target.value})}
                                placeholder="Enter detailed description"
                            />
                        </Form.Group>
                        <Row>
                            <Col md={6}>
                                <Form.Group className="mb-3">
                                    <Form.Label>Priority Level</Form.Label>
                                    <Form.Select
                                        value={newAlert.priority}
                                        onChange={(e) => setNewAlert({...newAlert, priority: e.target.value})}
                                    >
                                        <option value="Low">Low</option>
                                        <option value="Medium">Medium</option>
                                        <option value="High">High</option>
                                    </Form.Select>
                                </Form.Group>
                            </Col>
                            <Col md={6}>
                                <Form.Group className="mb-3">
                                    <Form.Label>Alert Type</Form.Label>
                                    <Form.Select
                                        value={newAlert.alertType}
                                        onChange={(e) => setNewAlert({...newAlert, alertType: e.target.value})}
                                    >
                                        <option value="General">General</option>
                                        <option value="Weather">Weather</option>
                                        <option value="Infrastructure">Infrastructure</option>
                                        <option value="Medical">Medical</option>
                                        <option value="Traffic">Traffic</option>
                                        <option value="Security">Security</option>
                                    </Form.Select>
                                </Form.Group>
                            </Col>
                        </Row>
                        <Form.Group className="mb-3">
                            <Form.Label>Affected Area</Form.Label>
                            <Form.Control
                                type="text"
                                value={newAlert.geoTargeting}
                                onChange={(e) => setNewAlert({...newAlert, geoTargeting: e.target.value})}
                                placeholder="Enter affected area or location"
                            />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>Affected Population</Form.Label>
                            <Form.Control
                                type="number"
                                value={newAlert.affectedPopulation}
                                onChange={(e) => setNewAlert({...newAlert, affectedPopulation: Number(e.target.value)})}
                                placeholder="Number of people affected"
                                min={0}
                            />
                        </Form.Group>
                    </Form>
                </Modal.Body>
                <Modal.Footer>
                    <Button variant="secondary" onClick={() => setShowCreateModal(false)}>
                        Cancel
                    </Button>
                    <Button variant="danger" onClick={handleCreateAlert}>
                        Create Alert
                    </Button>
                </Modal.Footer>
            </Modal>
        </Container>
    );
}

export default Alerts;