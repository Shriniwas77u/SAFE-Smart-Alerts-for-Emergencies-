import { useEffect, useState } from 'react';
import { Container, Row, Col, Card, Alert, Badge, Button, Table, Spinner } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';
import { alertsAPI, helpRequestsAPI } from '../services/api';

function Dashboard() {
    const [stats, setStats] = useState({ activeAlerts: 0, helpRequests: 0, totalDonations: 0, shelters: 0 });
    const [recentAlerts, setRecentAlerts] = useState([]);
    const [pendingRequests, setPendingRequests] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');
    const navigate = useNavigate();

    useEffect(() => {
        fetchDashboardData();
    }, []);

    const fetchDashboardData = async () => {
        setLoading(true);
        setError('');
        try {
            const alerts = await alertsAPI.getAll();
            const helpRequests = await helpRequestsAPI.getAll();
            setStats({
                activeAlerts: alerts.filter(a => a.status === 'Active').length,
                helpRequests: helpRequests.length,
                totalDonations: 15750, // Placeholder, replace with real API if available
                shelters: 12 // Placeholder, replace with real API if available
            });
            setRecentAlerts(alerts.slice(0, 3).map(a => ({
                id: a.alertId,
                title: a.title,
                severity: a.priority,
                area: a.geoTargeting,
                time: new Date(a.createdDate).toLocaleString()
            })));
            setPendingRequests(helpRequests.slice(0, 3).map(r => ({
                id: r.helpRequestId,
                type: r.type,
                requester: r.requesterName,
                location: r.location,
                status: r.urgency
            })));
        } catch (err) {
            setError('Failed to load dashboard data.');
        } finally {
            setLoading(false);
        }
    };

    const handleViewAllAlerts = () => {
        navigate('/alerts');
    };
    const handleViewAllRequests = () => {
        navigate('/help-requests');
    };
    const handleQuickAction = (action) => {
        switch (action) {
            case 'createAlert':
                navigate('/alerts');
                break;
            case 'viewHelpRequests':
                navigate('/help-requests');
                break;
            case 'manageDonations':
                alert('Donation management coming soon!');
                break;
            case 'updateShelters':
                alert('Shelter management coming soon!');
                break;
            case 'generateReport':
                alert('Report generation coming soon!');
                break;
            case 'systemSettings':
                alert('System settings coming soon!');
                break;
            default:
                break;
        }
    };

    return (
        <Container>
            <Row className="mb-4">
                <Col>
                    <h1 className="text-danger">Emergency Dashboard</h1>
                    <p className="text-muted">Real-time emergency management overview</p>
                </Col>
            </Row>
            {error && <Alert variant="danger">{error}</Alert>}
            {loading ? (
                <div className="text-center my-5"><Spinner animation="border" /></div>
            ) : (
                <>
                    {/* Statistics Cards */}
                    <Row className="mb-4">
                        <Col md={3} className="mb-3">
                            <Card className="text-center h-100 shadow-sm border-danger">
                                <Card.Body>
                                    <div className="text-danger mb-2">
                                        <i className="bi bi-exclamation-triangle-fill" style={{ fontSize: '2rem' }}></i>
                                    </div>
                                    <Card.Title className="h2 text-danger">{stats.activeAlerts}</Card.Title>
                                    <Card.Text className="text-muted">Active Alerts</Card.Text>
                                </Card.Body>
                            </Card>
                        </Col>
                        <Col md={3} className="mb-3">
                            <Card className="text-center h-100 shadow-sm border-primary">
                                <Card.Body>
                                    <div className="text-primary mb-2">
                                        <i className="bi bi-hand-thumbs-up-fill" style={{ fontSize: '2rem' }}></i>
                                    </div>
                                    <Card.Title className="h2 text-primary">{stats.helpRequests}</Card.Title>
                                    <Card.Text className="text-muted">Help Requests</Card.Text>
                                </Card.Body>
                            </Card>
                        </Col>
                        <Col md={3} className="mb-3">
                            <Card className="text-center h-100 shadow-sm border-success">
                                <Card.Body>
                                    <div className="text-success mb-2">
                                        <i className="bi bi-currency-dollar" style={{ fontSize: '2rem' }}></i>
                                    </div>
                                    <Card.Title className="h2 text-success">${stats.totalDonations.toLocaleString()}</Card.Title>
                                    <Card.Text className="text-muted">Total Donations</Card.Text>
                                </Card.Body>
                            </Card>
                        </Col>
                        <Col md={3} className="mb-3">
                            <Card className="text-center h-100 shadow-sm border-warning">
                                <Card.Body>
                                    <div className="text-warning mb-2">
                                        <i className="bi bi-house-fill" style={{ fontSize: '2rem' }}></i>
                                    </div>
                                    <Card.Title className="h2 text-warning">{stats.shelters}</Card.Title>
                                    <Card.Text className="text-muted">Active Shelters</Card.Text>
                                </Card.Body>
                            </Card>
                        </Col>
                    </Row>
                    <Row>
                        {/* Recent Alerts */}
                        <Col lg={6} className="mb-4">
                            <Card className="shadow-sm">
                                <Card.Header className="bg-danger text-white">
                                    <h5 className="mb-0">Recent Alerts</h5>
                                </Card.Header>
                                <Card.Body>
                                    {recentAlerts.map(alert => (
                                        <Alert key={alert.id} variant={alert.severity === 'High' ? 'danger' : alert.severity === 'Medium' ? 'warning' : 'info'} className="mb-2">
                                            <div className="d-flex justify-content-between align-items-start">
                                                <div>
                                                    <strong>{alert.title}</strong>
                                                    <br />
                                                    <small>Area: {alert.area}</small>
                                                </div>
                                                <div className="text-end">
                                                    <Badge bg={alert.severity === 'High' ? 'danger' : alert.severity === 'Medium' ? 'warning' : 'secondary'}>
                                                        {alert.severity}
                                                    </Badge>
                                                    <br />
                                                    <small className="text-muted">{alert.time}</small>
                                                </div>
                                            </div>
                                        </Alert>
                                    ))}
                                    <div className="text-center">
                                        <Button variant="outline-danger" size="sm" onClick={handleViewAllAlerts}>View All Alerts</Button>
                                    </div>
                                </Card.Body>
                            </Card>
                        </Col>
                        {/* Pending Help Requests */}
                        <Col lg={6} className="mb-4">
                            <Card className="shadow-sm">
                                <Card.Header className="bg-primary text-white">
                                    <h5 className="mb-0">Pending Help Requests</h5>
                                </Card.Header>
                                <Card.Body>
                                    <Table responsive size="sm">
                                        <thead>
                                            <tr>
                                                <th>Type</th>
                                                <th>Requester</th>
                                                <th>Location</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {pendingRequests.map(request => (
                                                <tr key={request.id}>
                                                    <td>{request.type}</td>
                                                    <td>{request.requester}</td>
                                                    <td>{request.location}</td>
                                                    <td>
                                                        <Badge bg={request.status === 'High' ? 'danger' : request.status === 'Medium' ? 'warning' : 'success'}>
                                                            {request.status}
                                                        </Badge>
                                                    </td>
                                                </tr>
                                            ))}
                                        </tbody>
                                    </Table>
                                    <div className="text-center">
                                        <Button variant="outline-primary" size="sm" onClick={handleViewAllRequests}>View All Requests</Button>
                                    </div>
                                </Card.Body>
                            </Card>
                        </Col>
                    </Row>
                    {/* Quick Actions */}
                    <Row>
                        <Col>
                            <Card className="shadow-sm">
                                <Card.Header>
                                    <h5 className="mb-0">Quick Actions</h5>
                                </Card.Header>
                                <Card.Body>
                                    <div className="d-flex gap-2 flex-wrap">
                                        <Button variant="danger" onClick={() => handleQuickAction('createAlert')}>Create Alert</Button>
                                        <Button variant="primary" onClick={() => handleQuickAction('viewHelpRequests')}>View Help Requests</Button>
                                        <Button variant="success" onClick={() => handleQuickAction('manageDonations')}>Manage Donations</Button>
                                        <Button variant="warning" onClick={() => handleQuickAction('updateShelters')}>Update Shelters</Button>
                                        <Button variant="info" onClick={() => handleQuickAction('generateReport')}>Generate Report</Button>
                                        <Button variant="secondary" onClick={() => handleQuickAction('systemSettings')}>System Settings</Button>
                                    </div>
                                </Card.Body>
                            </Card>
                        </Col>
                    </Row>
                </>
            )}
        </Container>
    );
}

export default Dashboard;